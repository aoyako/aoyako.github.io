<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Index on aoyako&#39;s blog</title>
    <link>/</link>
    <description>Recent content in Index on aoyako&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2023–2024 [Lohachov Mykhailo](/)</copyright>
    <lastBuildDate>Sat, 26 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running Haiku OS in VirtualBox</title>
      <link>/post/haiku/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/haiku/</guid>
      <description>This article describes my best attempts to use Haiku in VirtualBox It is commonly used to install Haiku in VirtualBox, but many instructions are missing. While installation is pretty straightforward, adding integrations between host and guest since Guest Additions are not supported. Installation process is described on the official homepage, but here is a recap:
Install official ISO Create a VM with a VDI hard disk and allocate more than 4 GB Attach Haiku ISO to a VM Extra: Haiku performance might be reduced on some VirtualBox versions, so it is safer to set the number of CPUs to 1 Finally, Follow the instructions when installing OS on a disk Enabling SSH This section is partially described in Network services section.</description>
    </item>
    
    <item>
      <title>Chip border extraction - I</title>
      <link>/post/package_1/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/package_1/</guid>
      <description>Welcome to my series on microchip-image extraction techniques. This algorithm was designed during my internship in a microchip manufacturing factory. Its primary objective is to autonomously compute the sizes and positions of chips within a package, simplifying subsequent processing by a machine operator. Our approach relies on employing discrete Fourier transformations on images, and a method was chosen for its efficacy in distinguishing repetitive patterns. You can find full code in my GitHub.</description>
    </item>
    
    <item>
      <title></title>
      <link>/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>I like programming in Python, Go, C++ and Lua.
You can see some of my projects in my github page and posts.
Work experience 2022.10 - now: Research Assistant at Kyoto University of Advanced Sciences 2021.04 - 2022.07: Software Engineer at GlobalLogic Education 2022.10 - 2024.09: MS Electrical Engineering at Kyoto University of Advanced Sciences, Faculty of Engineering 2018.09 - 2022.06: BS Software Engineering at Taras Shevchenko National Univesity, Faculty of Cybernetics Internships 2022.</description>
    </item>
    
    <item>
      <title>Snake</title>
      <link>/snake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/snake/</guid>
      <description> Heloo! </description>
    </item>
    
  </channel>
</rss>
